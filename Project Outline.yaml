Project Outline

Android App: Flutter Based
Firebase Backend

App Name: Mileager

App Description: An automated tool designed to help users track mileage in multiples vehicles and its purpose with a robust reporting structure for montly logging. 

App Features:
   Vehicale Management:
      - add, edit, delete vehicles
      - view vehicle details
      - vechile details include: make, model, year, color, vin, tag, and starting odometer reading, and bluetooth device name (if applicable, from dropdown), photo/icon
          - vehicle photos are stored locally only and do not need to be compressed but should be cropped into the circular icon frame for the grid
      - Vehicle manager will list vehicles in a grid by image or logo
      - Vehicle catgery/type is not necssary at this time, no max either
      - Bluetooth devices with same name should not be an issue as we can fall back to macid if needed
      - Vehicle manager wil have a button to add new vehicles and will need a button to edit vehicles when examining the details
    
    Trip Management:
        - add, edit, delete trips
           - adding trips manually is an option if offline trips are taken
        - view trip details
        - view trip history
        - view trip report
        - view trip summary
        - view trip details
        - view trip history
        - view trip report
        - view trip summary
        - trip duration is not necessary at this time so crossing over midnight should not be an issue
        - multiple short trips should be handled individually

      Trip automation:
         Based on bluetooth connection (manually assign which vehicle in vehicle list corresponds to which bluetooth devices)
         - when bluetooth connection is established, the app will automatically start tracking the trip
            - trip mileage is tracked geolocation, when the bluetooth connection is established the geolocaiton tracking starts
            - handling of frequent destinations learned over time will be immensley helpful, then those can be options in a drop down when adding a manual offline trip
            - frequent desitinations are more than 5 times, a desitation may be tagged as frequent wihen trip ends and given a name at that time
            - a trip managmenet page should allow for removing of a frequent destination
         - when bluetooth connection is lost, the app will automatically stop tracking the trip
         - when trip tracking is stopped a pop up of some sort will apprear on the device with buttons to confirm vehicle used, distance, and enter purpose of personal or business, and an optional memo
         - data is stored and synced to firebase
         - data synced will avoid conflict by including date and timestamp, along with an id generated by date, vehicle id, and bluetooth macid
         - data will be maintained for four years, then archived for two, then deleted

      Mileage Management:
         - view and edit milage distance, vehicle and purpose
      
      Milage reporting:
         - Generate excel report for each vehicle
         - Header of document inclues vehicle name, month, year, and total milage from previous month if possible
         - First column is day of the month, second column is memo, third is business mileage for that day, and fourth is personal mileage for that day
         - Sum of all business mileage for the month is the total business mileage for the month
         - Sum of all personal mileage for the month is the total personal mileage for the month
         - Sum of all mileage for the month is the total mileage for the month
         - automatically gnerated a report and save to a designated device folder on the second day of each month and send a push notification when this is complete
           - device folder should be selected in the settings of the app
         - report will be titled [Month Reported] [Vehicle Name] [Timestamp]
      

App Flow:
   - User opens app
   - User is taken to the home screen
   - User can view and edit vehicles
   - User can view and edit trips
   - User can view and edit mileage
   - User can view and edit reporting


   Authentication:
    - No authentication or user management required, app will not be distributed pubclicaly

Technical Requirements:
  - Minimum Android version: 14
  - Firestore
  - Storage limits will not be an issue
  - minimum bluetooth version: 4.0
  - data encryption is not required is not required
  - data should be validated based on entry type, mileage should always be a number (float is fine), date should be converted to a datetimestamp, purpose needs to be a string
  
  UI/UX:
    - Follow device theming for light/dark
    - Colors should be a muted, earthy pallete is fine for now but it should be easy to adjust later
    - Icons used where possible
    - Widget options that are 2x1 and 4x1 and 4x2 should be available
        - Widgets will be used to manually start and stop trips, when the trip is stopped manually the trip details pop up to select purpose and confirm distance should pop-up
        - The widget should display trip status and vehicle disgnation when trip is started

  
Performance:
  - App should be fast and responsive
  - App should be light on resources
  - App should be easy to maintain
  - App should be easy to update
  - App should be easy to test
  - App will need exemption from battery optimization
  - App will need exemption from background restrictions
  - App will need exemption from location restrictions
  - App will need exemption from storage restrictions
  - App will need exemption from network restrictions
  - App will need exemption from notification restrictions

Data StorageL
  - data is stored locally and synced automatically to firebase while connected
  - local trip data will be removed when monthly report is generated but will not be removed from firebase until the above timeline is fulfilled


Bluetooth:
  - Bluetooth connection is imperative so timeouts should be 60-90 seconds and retrys should be constant

GPS:
  - GPS is used to track trip mileage
  - GPS is used to track trip duration
  - GPS is used to track trip distance
  - GPS is used to track trip start and end locations
  - GPS is used to track trip start and end odometer readings
  - GPS is used to track trip start and end odometer readings
  - GPS poling should be 10 seconds for now
  - If GPS is lost and cannot be reaqquired after a few attempts a prompt to add trip mannually will appear
  - minimum distance for recording should be about 25 feet

Error Logging:
  - log as much information as possible in regard to firebase errors, connections, and interactions in common english in the log
  - output log information based on bluetooth connection status, and gps status


Every screen should have three small dots in the top right corner that are status lights:
  - one for trip status (red if not started, green if started, yellow if stopped)
  - one for gps acquisition (red if not acquired, flashing yellow if connecting, green if acquired)
  - one for bluetooth connection (red if not connected, green if connected, flashing yellow if connecting)


# Follow-up Tasks & Future Improvements:

Vehicle Image Management:
  - Re-implement image cropping functionality for vehicle photos
    - Currently disabled to fix image saving issues
    - Should allow users to crop images to square aspect ratio
    - Images should be cropped into circular icon frame for the grid display
    - Consider using image_cropper package with proper error handling
    - Ensure cropped images are saved to permanent storage location

UI/UX Enhancements:
  - Add image editing options (rotate, adjust brightness, etc.)
  - Implement image compression for storage optimization
  - Add option to take photo directly from camera vs gallery selection

Technical Debt:
  - Resolve Flutter debugger "Stream has already been listened to" issue
  - Optimize image loading performance for vehicle grid
  - Add proper image caching mechanism








  